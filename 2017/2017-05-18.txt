Title: 2017-05-18
2017-05-18 08:10:16 
> 任何不考虑瓶颈的调优都是幻想。—— Gene Kim

2017-05-18 08:12:47 
Donald Knuth 在一次关于维护代码库的讨论中进行了下面的完整描述：

> 我们应该忘记那些小的性能提升，这占了 97% 的时间：不成熟的优化是万恶之源。但同时我们也不能放过那至关重要的 3%。
换句话来说，大部分时间，你不应该关心代码的优化。它们通常已经足够好了。如果没有能达到标准，我们应该只需要改变那 3% 的代码。你并不会因为你的代码使用一个 if 替代了一个方法，得到几毫秒的性能提升而获得任何奖励。只有在分析之后再进行优化。
不成熟的优化包含盲目调用某个更快的方法，或使用一个特定的数据结构只因为其总体上更快。计算机科学认为两个方法或算法有一样的渐进增长（或时间复杂度），那么就可以认为它们性能是相同的，就算其中之一比另一个慢两倍。计算机的速度太快，算法在计算上的增长，如数据或使用量的增长比算法本身重要得多。

2017-05-18 08:13:58 
> 因为某个语言速度快而选择其为开发你应用的语言是不成熟优化的一种体现。

2017-05-18 08:19:21 
> 亚马逊的技术团队有两个观点，第一个观点是崇尚简化和自动化，第二个观点是运维优先，叫 operational excellence，做平台的思路。我觉得一定要能维护它，因为它是很长远，我不是解决当下的问题。